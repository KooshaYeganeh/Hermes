#!/usr/bin/bash

red=$'\e[1;31m' # red colour 
green=$'\e[1;32m' # green color
blue=$'\e[1;34m' # blue color
orange=$'\e[1;33m' # orange color
white=$'\e[0;37m'







echo "$white =============================================="
printf "Enter Directory: " 
read dir
echo "$white =============================================="

Q=/tmp/Quarantine
if [ -d "$Q" ];then
	true
else
	mkdir /tmp/Quarantine
fi

	


	 



check_extension(){
	
	exefiles=`find $dir -type f -iname "*.exe"`
	if [ "$exefiles" ];then
		echo "$red find file with .exe Extension [ ERROR ]"
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.exe $Q
			echo "$green all Files with .exe Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .exe Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green No File Detected with .exe Extensions [ OK ]"
	fi

	docxfile1=`find . -type f -iname '*.docx' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	docxfile2=`find . -type f -iname '*.docx' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$docxfile1" ] || [ "$docxfile2" ];then
		echo "$red find file with .docx Malicious File [ ERROR ] "
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.docx $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check Document Files and No malicious Avtivity Detected [ OK ]"
	fi

	docfile1=`find . -type f -iname '*.doc' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	docfile2=`find . -type f -iname '*.doc' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$docfile1" ] || [ "$docfile2" ];then
		echo "$red find file with .doc Malicious File [ ERROR ] "
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.doc $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check Doc Files and No malicious Avtivity Detecdted [ OK ]"
	fi


	docmfile1=`find . -type f -iname '*.docm' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	docmfile2=`find . -type f -iname '*.docm' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$docmfile1" ] || [ "$docmfile2" ];then
		echo "$red find file with .docm Malicious File [ ERROR ] "
		printf "$white Dou You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.docm $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check Docm Files  and No malicious Avtivity Detected [ OK ]"
	fi

	htmlfile1=`find . -type f -iname '*.html' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	htmlfile2=`find . -type f -iname '*.html' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$htmlfile1" ] || [ "$htmlfile2" ];then
		echo "$red find file with .html Malicious File [ ERROR ] "
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.html $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check html Files and No malicious Activity Detected [ OK ]"
	fi

	htmfile1=`find . -type f -iname '*.htm' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	htmfile2=`find . -type f -iname '*.htm' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$htmfile1" ] || [ "$htmfile2" ];then
		echo "$red find file with .htm Malicious File [ ERROR ] "
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.htm $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check htm Files and No malicious Avtivity Detected [ OK ]"
	fi


	htmafile1=`find . -type f -iname '*.htma' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	htmafile2=`find . -type f -iname '*.htma' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$htmafile1" ] || [ "$htmafile2" ];then
		echo "$red find file with .htma Malicious File [ ERROR ] "
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.htma $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "!!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check htma Files and No malicious Activity Detected [ OK ]"
	fi




	pdffile1=`find . -type f -iname '*.pdf' -exec hexdump {} \; | awk '{print $2}' | grep 5a4d`
	pdffile2=`find . -type f -iname '*.pdf' -exec hexdump {} \; | awk '{print $2}' | grep 4d5a`
	if [ "$pdffile1" ] || [ "$pdffile2" ];then
		echo "$red find file with .pdf Malicious File [ ERROR ] "
		printf "$white Do You want to Quarantine This Files?(y/n)"
		read res
		if [ "$res" == y ];then
			mv $dir/*.pdf $Q
			echo "$green all Malicious Files with .doc Extensions Quarantend [ OK ]"
		elif [ "$res" == n ];then
			echo "$orange You pass to Quarantine .doc Files"
		else
			echo "$white !!! Enter valid Answer(Yes or No)"
		fi
	else
		echo "$green check pdf Files and No malicious Activity Detected [ OK ]"
	fi





}
			


check_signature(){

	echo "$white KYGNus-AV Start to check Files Signature.Please Wait ... "
	exe1=`find $dir -type f -exec hexdump {} \; | awk '{print $2}' | grep -w 4d5a`
	exe2=`find $dir -type f -exec hexdump {} \; | awk '{print $2}' | grep -w 5a4d`

	if [ "$exe1" ] || [ "$exe2" ];then
		echo "$red check signatures and Find Executable File [ ERROR ]"
	fi


}




anomality(){
	python=`sudo find /proc -type f -iname "*.py" -exec ls -ltrha  {} \; | cut -d"." -f1`
	perl=`sudo find /proc -type f -iname "*.pl" -exec ls -ltrha  {} \; | cut -d"." -f1`
	ruby=`sudo find /proc -type f -iname "*.rb" -exec ls -ltrha  {} \; | cut -d"." -f1`
	js=`sudo find /proc -type f -iname "*.js" -exec ls -ltrha  {} \; | cut -d"." -f1`

	if [ "$python" ] || [ "$perl" ] || [ "$ruby" ] || [ "$js" ];then
		echo "$red [ERROR] Find Script in /proc Directory"
	else
		echo "$green No anomality Detected"
	fi

}





file_type(){

	echo "$white KYGnus-AV Start to check Files might be Malicious in $dir .Please wait..."

	notpy=`find $dir -type f -exec file {} \; | grep executable | grep -v python `
	notpl=`find $dir -type f -exec file {} \; | grep executable | grep -v perl `
	executable=`find $dir -type f -exec file {} \; | grep executable `

	if [ "notpy" ] || [ "notpl" ] || [ "executable" ];then
		echo "$red probably system have malicious executable File [ ERROR ]"
	fi

}




sha(){
	echo "$white KYGnus-AV start to Calculate sha256sum of Files.Do You want to Create File?(y/n)"
	read sha_res
	if [ "$sha_res" == y ];then

		shafile=$dir/sha256sum_files.txt
		if [ -f "$shafile" ];then
			echo "shafile Exists"
			find $dir -type f -exec sha256sum {} \; > $dir/sha256sum_files_new.txt
			shanew=`sha256sum $dir/sha256sum_files_new.txt`
			shaold=`sha256sum $dir/sha256sum_files.txt`
			if [ "$shanew" == "$shaold" ];then
				echo "$green No File changing Detected [ OK ] "
			else
				echo "$red File changing Detected [ ERROR ]"
			fi
		else
			echo "system Start Calculate sha256sum of Files ..."
			hashcal=`find $dir -type f -exe sha256sum {} \; > $dir/sha256sum_files.txt`
		fi

		echo "$green Note : Results saved in $dir [ OK ]"
	elif [ "$sha_res" == n ];then
		echo "$white You pass to create sha256sum Files"
	fi
}




perm(){
	echo "$white KYGnus-AV Start to Create File from Permissions.Do You want to create permissions File(y/n)"
	read perm_res
	if [ "$prem_res" == y ];then
		find $dir -type f -exec ls -l {} \; | awk '{print $1}' | cut -d "." -f1 > $dir/perm.txt
		echo "$green Note: File Created in same Directory [ OK ]"
	elif [ "$perm_res" == n ];then
		echo "$white You pass to create permissions File"
	fi

}




			

check_extension
check_signature
file_type
anomality
sha
perm


